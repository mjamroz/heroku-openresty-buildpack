#!/usr/bin/env bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR
set -euo pipefail
OLD_PATH="$PATH"

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

echo "-----> Installing OpenResty ..."
tar -zxf "dist/openresty-$STACK".tar.gz -C "$BUILD_DIR"
cp -a conf/nginx.conf.default "$BUILD_DIR/openresty/nginx/conf"
mkdir -p "$BUILD_DIR/bin"
cp -a bin/startopenresty "$BUILD_DIR/bin/startopenresty"

# Add a profile.d script to add openresty tools and luarocks to PATH
mkdir -p "$BUILD_DIR/.profile.d"
cat << "EOF" > "$BUILD_DIR/.profile.d/000-openresty-path.sh"
export PATH="$PATH:$HOME/openresty/bin:$HOME/openresty/luajit/bin:$HOME/openresty/nginx/sbin"
export LD_LIBRARY_PATH=$HOME/openresty/luajit/lib:$HOME/openresty/pcre/lib:$HOME/openresty/openssl111/lib:$LD_LIBRARY_PATH
export LIBRARY_PATH=$HOME/openresty/luajit/lib:$HOME/openresty/pcre/lib:$HOME/openresty/openssl111/lib:$LIBRARY_PATH
EOF
chmod +x "$BUILD_DIR/.profile.d/000-openresty-path.sh"

ln -s "$BUILD_DIR/openresty" /app/openresty
export PATH="$PATH:/app/openresty/bin:/app/openresty/luajit/bin:/app/openresty/nginx/sbin"
# Install OPM packages from opm.txt
if [[ -f "$BUILD_DIR/opm.txt" ]]; then
  chksum="$(sha1sum "$BUILD_DIR/opm.txt" | awk '{print $1}')"

  if [[ -f "$CACHE_DIR/opm-${chksum}.tar.gz" ]]; then
    echo "-----> Installing cached OPM packages ..."
    tar -zxf "$CACHE_DIR/opm-${chksum}.tar.gz" -C "$BUILD_DIR/openresty/site"
  else
    while read name; do
      echo "-----> Installing OPM package: $name ..."
      opm get "$name" 2>&1 | fold -w 100 -s | pr -to 7
    done < "$BUILD_DIR/opm.txt"

    echo "-----> Caching OPM packages ..."
    tar -zcf "$CACHE_DIR/opm-${chksum}.tar.gz" -C "$BUILD_DIR/openresty/site" .
  fi
fi

# Install LuaRocks packages from luarocks.txt
if [[ -f "$BUILD_DIR/luarocks.txt" ]]; then
  chksum="$(sha1sum "$BUILD_DIR/luarocks.txt" | awk '{print $1}')"

  if [[ -f "$CACHE_DIR/luarocks-${chksum}.tar.gz" ]]; then
    echo "-----> Installing cached LuaRocks packages ..."
    tar -zxf "$CACHE_DIR/luarocks-${chksum}.tar.gz" -C "$BUILD_DIR/openresty/luarocks"
  else
    while read rock version; do
      if [[ "$version" ]]; then
        echo "-----> Installing LuaRocks package: ${rock}@${version} ..."
        luarocks install "$rock" "$version" 2>&1 | fold -w 100 -s | pr -to 7
      else
        echo "-----> Installing LuaRocks package: ${rock}@latest ..."
        luarocks install "$rock" 2>&1 | fold -w 100 -s | pr -to 7
      fi
    done < "$BUILD_DIR/luarocks.txt"

    echo "-----> Caching LuaRocks packages ..."
    tar -zcf "$CACHE_DIR/luarocks-${chksum}.tar.gz" -C "$BUILD_DIR/openresty/luarocks" .
  fi
fi
# cp -rf "$BUILD_DIR/nginx/*" "$BUILD_DIR/openresty/nginx/"
# echo '-----> nginx-buildpack: copy nginx to app/openresty/nginx/'
# cp -rf "$BUILD_DIR/lualib/*" "$BUILD_DIR/openresty/lualib/"
# echo '-----> nginx-buildpack: copy lualib to app/openresty/lualib/'
#
if [[ -f $BUILD_DIR/nginx/conf/nginx.conf ]]; then
	cp "$BUILD_DIR/nginx/conf/nginx.conf" "$BUILD_DIR/openresty/nginx/conf/nginx.conf"
	echo '-----> nginx-buildpack: copy nginx.conf to app/openresty/nginx/config/nginx.conf'
else
	echo '-----> nginx-buildpack: Custom nginx.conf not found in config.'
fi
if [[ -f $BUILD_DIR/lualib/http_sig/sign_response.lua ]]; then
	cp "$BUILD_DIR/lualib/http_sig/sign_response.lua" "$BUILD_DIR/openresty/lualib/http_sig/sign_response.lua"
	echo '-----> nginx-buildpack: copy sign_response.lua to app/openresty/lualib/http_sig/sign_response.lua'
else
	echo '-----> nginx-buildpack: Custom sign_response.lua not found in lualib/http_sig.'
fi
if [[ -f $BUILD_DIR/lualib/http_sig/hmac.lua ]]; then
	cp "$BUILD_DIR/lualib/http_sig/hmac.lua" "$BUILD_DIR/openresty/lualib/http_sig/hmac.lua"
	echo '-----> nginx-buildpack: copy hmac.lua to app/openresty/lualib/http_sig/hmac.lua'
else
	echo '-----> nginx-buildpack: Custom hmac.lua not found in lualib/http_sig.'
fi
if [[ -f $BUILD_DIR/lualib/http_sig/rsa.lua ]]; then
	cp "$BUILD_DIR/lualib/http_sig/rsa.lua" "$BUILD_DIR/openresty/lualib/http_sig/rsa.lua"
	echo '-----> nginx-buildpack: copy rsa.lua to app/openresty/lualib/http_sig/rsa.lua'
else
	echo '-----> nginx-buildpack: Custom rsa.lua not found in lualib/http_sig.'
fi
if [[ -f $BUILD_DIR/nginx/https_cert/test.alux.fun/privkey.pem ]]; then
	cp "$BUILD_DIR/nginx/https_cert/test.alux.fun/privkey.pem" "$BUILD_DIR/openresty/nginx/https_cert/test.alux.fun/privkey.pem"
	echo '-----> nginx-buildpack: copy test.alux.fun/privkey.pem to app/openresty/nginx/https_cert/test.alux.fun/privkey.pem'
else
	echo '-----> nginx-buildpack: Custom test.alux.fun/privkey.pem not found in lualib/http_sig.'
fi
rm -f /app/openresty
export PATH="$OLD_PATH"
